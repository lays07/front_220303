@charset "UTF-8";
/* c_layout_code_001.css */

body { margin: 0;}

#wrap {
  width: 900px; height: auto; min-height: 500px;
  margin: 0 auto; padding-bottom: 300px;
  background-color: gray;
}

.box {
  width: 600px; height: 600px;
  margin: 0 auto;
  background-color: #95d6a4;
}

.inner_01 {background-color: #456ea2;}
.inner_02 {background-color: #fff9ed;}
.inner_03 {background-color: #ffcf5d;}

.inner_01 .insert {background-color: #ffcf5d;}
.inner_02 .insert {background-color: #db5446;}
.inner_03 .insert {background-color: #7e94ff;}

/* ---------------------------- */
.box_01 > div {width: 100%; height: 200px;}

/* ---------------------------- */
.box_02 > div {float:left; width: 200px; height: 100%;}

/* ---------------------------- */
.box_03 > div {width: 200px; height: 50%; margin: 0 auto;}

/* ---------------------------- */
.box_04 {height: auto;}
.box_04 > div {width: 100%; height: 200px;}
.box_04 .insert {width: 60%; height: 200px; margin: 0 auto;}
.box_04 > .inner_01 > .insert { background-color: #ffcf5d;}
.box_04 > .inner_02 > .insert { width: 45%; background-color: #db5446;}
.box_04 > .inner_03 > .insert { margin: 0; background-color: #7e94ff;}

/* .box_04 > .inner_01 > div {width: 60%; height: 200px; margin: 0 auto; background-color: #ffcf5d;}
.box_04 > .inner_02 > div {width: 45%; height: 200px; margin: 0 auto; background-color:red;}
.box_04 > .inner_03 > div {width: 60%; height: 200px; margin: 0 auto; background-color: #ffcf5d;} */

.box_05 {height: auto;}
.box_05 > div {float: left; width: 200px; height: 600px;}
.box_05 .insert {clear: both; width: 100%; height: 200px;}

.box_05:after,
.box_05::after {content: ""; display: block; clear: both; width: 100%; height: 0;}

.box_05 .insert {width: 100%; height: 200px;}
.box_05 .inner_02 .insert {margin-top: 200px;}
.box_05 .inner_03 .insert {margin-top: 400px;}

/* 하나의 요소 내부에, 
여러 요소들이 모두 가로로 나열 되어있는 상태일경우 float:left를 이용하여 처리
하나의 요소에  float을 사용하였다면 그 형제 요소에는 모두 float을 사용
하지만 부모요소가 높이값이 auto라면 실제 반영되는 부모의 높이는 0이 설정되게 되었으므로, 
부모에 가상의 어떤 존재를 생성하여(마지막에 생성되는 :after)하여, clear:both;를 적용
단, clear:both는 반드시 block요소 이어야 한다. 
어떠한 요소에 관계없이, float 기능을 사용하면(float:none 제외) 해당요소는 block처리
*/

.box_06 {height: auto;}
.box_06 > div {width: 100%; height: auto;}
.box_06 .insert {float: left; width: 230px; height: 200px;}
.box_06 > div:after,
.box_06 > div::after { content: ""; display: block; clear: both; width: 100%; height: auto;}



.inner_01 .insert_01 {background-color: #ffcf5d;} 
.inner_01 .insert_02 {float: right; background-color:wheat;}
.box_06 .inner_02 {background-color: transparent;}
/* .box_06 .inner_01:after,  
.box_06 .inner_01::after{ content: ""; display: block; clear: both; width: 100%; height: 0;}   */

.inner_02 .insert_01 { width: 230px; height: 200px; background-color:chocolate;} 
.inner_02 .insert_02 { width: 140px; height: 200px; background-color:darkblue;} 
.inner_02 .insert_03 { width: 230px; height: 200px; background-color: aquamarine;}
/* .box_06 .inner_02:after,
.box_06 .inner_02::after {content: ""; display: block; clear: both; width: 100%; height: 0;} */

.inner_03 .insert_01 { width: 3710x; height: 200px; background-color:#db5446;} 
.inner_03 .insert_02 { width: 230px; height: 200px; background-color:yellowgreen;}
/* .box_06 .inner_03:after,
.box_06 .inner_03::after{ content: ""; display: block; clear: both;} */

/* float,clear / pseudo code(가상코드, 의사전달코드) / margin, padding, border, outline */